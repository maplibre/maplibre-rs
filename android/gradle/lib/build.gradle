plugins {
    id 'org.mozilla.rust-android-gradle.rust-android' version '0.9.3' apply true
    id 'com.android.library' version '7.0.4' apply true
    id 'org.jetbrains.kotlin.android' version '1.6.21' apply true
}

apply plugin: 'kotlin-android'

android {
    ndkVersion "23.2.8568313"

    compileSdkVersion 31
    
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

cargo {
    module = "../../"
    targets = ["arm64", "x86_64", "x86"]
    libname = "maplibre_android"
    targetDirectory = "${module}/../target"
    profile = "debug"

    features {
        defaultAnd "foo", "bar"
        noDefaultBut("foo", "bar")
        all()
    }
}

dependencies {
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.13.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.6.21"
}

tasks.whenTaskAdded { task ->
    if ((task.name == 'mergeDebugJniLibFolders' || task.name == 'mergeReleaseJniLibFolders')) {
        task.dependsOn 'cargoBuild'
    }
}

afterEvaluate {
    // The `cargoBuild` task isn't available until after evaluation.
    android.libraryVariants.all { variant ->
        def productFlavor = ""
        variant.productFlavors.each {
            productFlavor += "${it.name.capitalize()}"
        }
        def buildType = "${variant.buildType.name.capitalize()}"
        tasks["generate${productFlavor}${buildType}Assets"].dependsOn(tasks["cargoBuild"])
    }
}
